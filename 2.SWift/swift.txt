1. All Swift classes must inherit from which root class
Not required
NSObject
NSRootObject

2. Choose an answer that is a way to unwarp optional:
Force Unwrapping
Optional Binding
Implicity Unwrapping
All of the Above

3. Which of the following answer is not a properly way to declare a property
<pre><code class="language-swift"> var totalSteps: Int = 0 { willSet(newTotalSteps) { print(newTotalSteps) } } </code></pre>
<pre><code class="language-swift"> let fourByFiveByTwo = Cuboid(width: 4.0, height: 5.0, depth: 2.0) </code></pre>
<pre><code class="language-swift"> lazy let importer = DataImporter() </code></pre>
<pre><code class="language-swift"> class var ComputedTypeProperty: Int { return 107 } </code></pre>

4. Which keyword will be used when a method want to change the value of a property in Struct or Enum?
indirect
typealias
internal
mutating

5. func swapNumber(a: inout Int, b: inout Int) { 

    a = a + b 

    b = a - b 

    a = a - b 

} 



var a = 1900 

var b = 69 

swapNumber(a: &a, b: &b) 

print("a: \(a), b: \(b)") 

What will be printed ?
a: 69, b: 1900
a: 1900, b: 69
a: 69, b: 1831
a: 1831, b: 69

6. Given a function that return a random value in the range from 1 to 5 How many time at least running this fuction to get number 5 with the accurate of 100% ?
5.0
25.0
100.0
None of the above

7. What type of Swift ?
Object Oriented Programming
Protocol Oriented Programming
Both Protocol Oriented Programming and Object Oriented Programming
Orther answers

8. The values in Set must be ?
Hashable
Int
String
Double

9. Given the following code:

var i = 2 


repeat { 

    i *= i * 2 

} while i < 20 

print(i)
what will be the output ?
32.0
64.0
128.0
256.0

10. Given the following code:

let x = 1 

let y = 0 

let z = x != 2 || y == 4 

print(z)
what will be the output ?
1.0
0.0
true
false

11. let array = [[true, false, true, true, false], 

                   [false, true, true, false, true], 

                   [true, false] 

    ] 



let result = array 

    .flatMap { $0 } 

    .reduce(true) { $0 && $1 } 



print("result: \(result)")
What will be printed ?
result: false
result: true
runtime error
flatMap can be used in this case

12. What is type of Enum, Struct, Array ?
Value type
Reference type
Generic Type
Function type

13. Extension can not ?
Add stored type properties
Add computed type properties
Adopt Protocol
Define subscripts

14. which way to prevent a method, property, or subscript from being overridden ?
Use the final keyword
Use the extention
Create private instance
Use the static keyword

15. Are structs thread-safe?
Yes
No

16. What is mean of encapsulation in OOP ?
Objects can hide the properties
Objects can hide the method
Project can be encapsulated
Object specifies whether or not to share its data to other objects

17. Given the following code:

let language: [String] = ["Swift", "Ruby"] 

   let pattern: [String] = ["Delegate"] 

   let sumary = [language ,pattern] 

   let flattenedSum = sumary.flatMap{ $0 } 

   let reducedSum = flattenedSum.reduce("", { $0 + $1 }) 

   let finalSum = reducedSum.filter{ $0.count < 10} 

   print(finalSum) 

What will be printed to the screen ?
Swift
SwiftRuby
Delegate
nil

18. Which is not different between Class and Struct ?
Inheritance enables one class to inherit the characteristics of another.
Deinitializers enable an instance of a struct to free up any resources it has assigned.
Type casting enables you to check and interpret the type of a class instance at runtime.
Reference counting allows more than one reference to a class instance.

19. Which of the following answers contain only Value Type ?
Class, Closure, Tuple
Struct ,Enum, Closure
Enum, Tuple, Struct, Protocol
Tuple, Closure, Enum, Protocol

20. Given:

1+2 = 2
3+4 = 9
5+6 = 20
9+10 = ?
Choose an answer below
120.0
69.0
54.0
39.0



